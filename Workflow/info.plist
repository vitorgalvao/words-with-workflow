<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.wordswith</string>
	<key>connections</key>
	<dict>
		<key>48469E9B-6947-402C-8E1C-EA2991868137</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65B0EC53-CFC7-49C1-BFD3-3C20056E3944</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5C277098-81AC-4882-BDEC-CE5761AF934A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65B0EC53-CFC7-49C1-BFD3-3C20056E3944</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>979825BF-A2A5-4A2D-8A48-F111E1D45FF8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65B0EC53-CFC7-49C1-BFD3-3C20056E3944</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Find words that contain a particular pattern</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Words With</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>keyword</key>
				<string></string>
				<key>language</key>
				<string></string>
				<key>showallwords</key>
				<true/>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.dictionaryfilter</string>
			<key>uid</key>
			<string>65B0EC53-CFC7-49C1-BFD3-3C20056E3944</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>{var:start_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Grabbing word list…</string>
				<key>script</key>
				<string>function readFile(path) {
  const data = $.NSFileManager.defaultManager.contentsAtPath(path)
  const string = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding).js
  return string
}

function run(argv) {
  const wordsFile = "/usr/share/dict/words"
  const matchAgainst = new RegExp(`^${argv[0]}`)

  const sfItems = readFile(wordsFile)
    .split("\n")
    .filter(word =&gt; word.match(matchAgainst))
    .map(word =&gt; ({ title: word, arg: word }))

  return JSON.stringify({ items: sfItems })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words Starting With…</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>48469E9B-6947-402C-8E1C-EA2991868137</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>{var:contain_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Grabbing word list…</string>
				<key>script</key>
				<string>function readFile(path) {
  const data = $.NSFileManager.defaultManager.contentsAtPath(path)
  const string = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding).js
  return string
}

function run(argv) {
  const wordsFile = "/usr/share/dict/words"
  const matchAgainst = new RegExp(`.*${argv[0]}.*`)

  const sfItems = readFile(wordsFile)
    .split("\n")
    .filter(word =&gt; word.match(matchAgainst))
    .map(word =&gt; ({ title: word, arg: word }))

  return JSON.stringify({ items: sfItems })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words Containing…</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>5C277098-81AC-4882-BDEC-CE5761AF934A</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>{var:end_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Grabbing word list…</string>
				<key>script</key>
				<string>function readFile(path) {
  const data = $.NSFileManager.defaultManager.contentsAtPath(path)
  const string = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding).js
  return string
}

function run(argv) {
  const wordsFile = "/usr/share/dict/words"
  const matchAgainst = new RegExp(`${argv[0]}$`)

  const sfItems = readFile(wordsFile)
    .split("\n")
    .filter(word =&gt; word.match(matchAgainst))
    .map(word =&gt; ({ title: word, arg: word }))

  return JSON.stringify({ items: sfItems })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words Ending With…</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>979825BF-A2A5-4A2D-8A48-F111E1D45FF8</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>## Usage

Search for words starting with a specific combination of letters via the `wws` keyword. `wwa` searches for words with the string anywhere and the `wwe` keyword lists words ending in the pattern. &lt;kbd&gt;↩&lt;/kbd&gt; shows the word’s definition in Alfred.

![Showing all options](images/about/ww.png)

![Showing words starting with](images/about/wws.png)</string>
	<key>uidata</key>
	<dict>
		<key>48469E9B-6947-402C-8E1C-EA2991868137</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>5C277098-81AC-4882-BDEC-CE5761AF934A</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>170</real>
		</dict>
		<key>65B0EC53-CFC7-49C1-BFD3-3C20056E3944</key>
		<dict>
			<key>xpos</key>
			<real>260</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>979825BF-A2A5-4A2D-8A48-F111E1D45FF8</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>300</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>wws</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Words Starting With Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>start_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>wwa</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Words Containing Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>contain_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>wwe</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Words Ending With Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>end_keyword</string>
		</dict>
	</array>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>2023.1</string>
	<key>webaddress</key>
	<string>https://github.com/vitorgalvao/words-with-workflow/</string>
</dict>
</plist>
